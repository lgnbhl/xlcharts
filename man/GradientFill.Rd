% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GradientFill.R
\name{GradientFill}
\alias{GradientFill}
\title{GradientFill}
\usage{
GradientFill(
  type = "linear",
  degree = 0L,
  left = 0L,
  right = 0L,
  top = 0L,
  bottom = 0L,
  stop = list(),
  ...
)
}
\arguments{
\item{type}{type}

\item{degree}{degree}

\item{left}{left}

\item{right}{right}

\item{top}{top}

\item{bottom}{bottom}

\item{stop}{stop}

\item{...}{Additional arguments, i.e. kwargs.}
}
\value{
An openpyxl Python object.
}
\description{
Fill areas with gradient

\url{https://openpyxl.readthedocs.io/en/stable/api/openpyxl.styles.fills.html}
}
\details{
Two types of gradient fill are supported: - A type='linear' gradient interpolates colours between a set of specified Stops, across the length of an area. The gradient is left-to-right by default, but this orientation can be modified with the degree attribute. A list of Colors can be provided instead and they will be positioned with equal distance between them. - A type='path' gradient applies a linear gradient from each edge of the area. Attributes top, right, bottom, left specify the extent of fill from the respective borders. Thus top="0.2" will fill the top 20% of the cell.
}
\examples{
\dontrun{
GradientFill()
}

}
